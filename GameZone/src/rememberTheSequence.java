import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;

import java.awt.*;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

import java.util.*;

import javax.swing.JOptionPane;

/*
 * rememberTheSequence.java
 *
 * Created on 22 May, 2016, 11:20:46 PM
 */
/**
 *
 * @author Temp
 */
public class rememberTheSequence extends javax.swing.JFrame {

    Timer timerDelay;
    Timer timerFlash;
    Timer timerCorrect;

    int msTimeBegin = 250;
    int msTimeEnd = 1500;
    int msTimeFlash = 250;

    boolean clickable;
    boolean newHighScore;
    boolean begin = true;
    boolean end = false;
    boolean exit = true;

    int gameScore;
    int highScore;
    int gameLevel;
    int currentLevel;
    int sequence[];

    String username = "";

    /** Creates new form rememberTheSequence */
    public rememberTheSequence() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coverPanel = new javax.swing.JPanel();
        homeScreenPanel = new javax.swing.JPanel();
        welcomeL = new javax.swing.JLabel();
        nameL = new javax.swing.JLabel();
        returnBtn = new javax.swing.JButton();
        rememberTheSequenceL = new javax.swing.JLabel();
        rememberTheSequencePic1L = new javax.swing.JLabel();
        instructionsPanel = new javax.swing.JPanel();
        proceedToGameBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        instructions2TA = new javax.swing.JTextArea();
        instructions1TF = new javax.swing.JTextField();
        rememberTheSequencePic2L = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        box1TF = new javax.swing.JTextField();
        box2TF = new javax.swing.JTextField();
        box3TF = new javax.swing.JTextField();
        box4TF = new javax.swing.JTextField();
        startBtn = new javax.swing.JButton();
        gameScoreL1 = new javax.swing.JLabel();
        gameScoreL2 = new javax.swing.JLabel();
        highScoreL1 = new javax.swing.JLabel();
        highScoreL2 = new javax.swing.JLabel();
        correctMsgL = new javax.swing.JLabel();
        startMsg1L = new javax.swing.JLabel();
        startMsg2L = new javax.swing.JLabel();
        submitMsg1L = new javax.swing.JLabel();
        submitMsg2L = new javax.swing.JLabel();
        click01TF = new javax.swing.JTextField();
        click02TF = new javax.swing.JTextField();
        click03TF = new javax.swing.JTextField();
        click04TF = new javax.swing.JTextField();
        click05TF = new javax.swing.JTextField();
        click06TF = new javax.swing.JTextField();
        click07TF = new javax.swing.JTextField();
        click08TF = new javax.swing.JTextField();
        click09TF = new javax.swing.JTextField();
        click10TF = new javax.swing.JTextField();
        click11TF = new javax.swing.JTextField();
        click12TF = new javax.swing.JTextField();
        click13TF = new javax.swing.JTextField();
        click14TF = new javax.swing.JTextField();
        click15TF = new javax.swing.JTextField();
        yourClicksTF = new javax.swing.JLabel();
        rememberTheSequencePic3L = new javax.swing.JLabel();
        gameOverPanel = new javax.swing.JPanel();
        gameOverL = new javax.swing.JLabel();
        gameScoreL = new javax.swing.JLabel();
        highScoreL = new javax.swing.JLabel();
        playAgainBtn = new javax.swing.JButton();
        rememberTheSequencePic4L = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Follow The Colours");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        coverPanel.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(coverPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        homeScreenPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        homeScreenPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        welcomeL.setFont(new java.awt.Font("Calibri", 3, 14));
        welcomeL.setText("Welcome");
        homeScreenPanel.add(welcomeL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        nameL.setFont(new java.awt.Font("Calibri", 3, 14));
        homeScreenPanel.add(nameL, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        returnBtn.setFont(new java.awt.Font("Times New Roman", 1, 12));
        returnBtn.setText("Back To Main Menu");
        returnBtn.setPreferredSize(new java.awt.Dimension(90, 23));
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });
        homeScreenPanel.add(returnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 15, 150, -1));

        rememberTheSequenceL.setFont(new java.awt.Font("Times New Roman", 1, 24));
        rememberTheSequenceL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rememberTheSequenceL.setText("REMEMBER THE SEQUENCE");
        homeScreenPanel.add(rememberTheSequenceL, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 15, 350, 20));

        rememberTheSequencePic1L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/05.jpg"))); // NOI18N
        homeScreenPanel.add(rememberTheSequencePic1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 50));

        getContentPane().add(homeScreenPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 50));

        instructionsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        proceedToGameBtn.setFont(new java.awt.Font("Tahoma", 1, 16));
        proceedToGameBtn.setText("Proceed To Game");
        proceedToGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedToGameBtnActionPerformed(evt);
            }
        });
        instructionsPanel.add(proceedToGameBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, 200, 30));

        instructions2TA.setColumns(20);
        instructions2TA.setEditable(false);
        instructions2TA.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        instructions2TA.setRows(5);
        instructions2TA.setText("\n    There are four coloured squares (Red, Green, Blue, Yellow).\n\n    These will light up one at a time to form a sequence.\n\n    Your objective is to remember that sequence and repeat it after the entire\n    sequence has been played.\n\n    After completion of each level, press the 'Start Level' button to view the\n    next sequence.\n\n    Have Fun !!\n");
        instructions2TA.setBorder(null);
        instructions2TA.setOpaque(false);
        jScrollPane2.setViewportView(instructions2TA);

        instructionsPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 700, 265));

        instructions1TF.setEditable(false);
        instructions1TF.setFont(new java.awt.Font("Calibri", 3, 20));
        instructions1TF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        instructions1TF.setText("INSTRUCTIONS");
        instructionsPanel.add(instructions1TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 700, 30));

        rememberTheSequencePic2L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/09.jpg"))); // NOI18N
        instructionsPanel.add(rememberTheSequencePic2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        getContentPane().add(instructionsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 550));

        gamePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box1TF.setEditable(false);
        box1TF.setMaximumSize(new java.awt.Dimension(100, 100));
        box1TF.setMinimumSize(new java.awt.Dimension(100, 100));
        box1TF.setPreferredSize(new java.awt.Dimension(100, 100));
        box1TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box1TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box1TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box1TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box1TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box1TFMouseReleased(evt);
            }
        });
        gamePanel.add(box1TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, -1, -1));

        box2TF.setEditable(false);
        box2TF.setMaximumSize(new java.awt.Dimension(100, 100));
        box2TF.setMinimumSize(new java.awt.Dimension(100, 100));
        box2TF.setPreferredSize(new java.awt.Dimension(100, 100));
        box2TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box2TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box2TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box2TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box2TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box2TFMouseReleased(evt);
            }
        });
        gamePanel.add(box2TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 150, -1, -1));

        box3TF.setEditable(false);
        box3TF.setMaximumSize(new java.awt.Dimension(100, 100));
        box3TF.setMinimumSize(new java.awt.Dimension(100, 100));
        box3TF.setPreferredSize(new java.awt.Dimension(100, 100));
        box3TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box3TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box3TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box3TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box3TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box3TFMouseReleased(evt);
            }
        });
        gamePanel.add(box3TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, -1, -1));

        box4TF.setEditable(false);
        box4TF.setMaximumSize(new java.awt.Dimension(100, 100));
        box4TF.setMinimumSize(new java.awt.Dimension(100, 100));
        box4TF.setPreferredSize(new java.awt.Dimension(100, 100));
        box4TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box4TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box4TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box4TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box4TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box4TFMouseReleased(evt);
            }
        });
        gamePanel.add(box4TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 270, -1, -1));

        startBtn.setFont(new java.awt.Font("Arial", 1, 24));
        startBtn.setText("Start Game");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });
        gamePanel.add(startBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        gameScoreL1.setFont(new java.awt.Font("Tahoma", 1, 14));
        gameScoreL1.setForeground(new java.awt.Color(255, 255, 255));
        gameScoreL1.setText("Game Score:");
        gamePanel.add(gameScoreL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        gameScoreL2.setFont(new java.awt.Font("Tahoma", 1, 14));
        gameScoreL2.setForeground(new java.awt.Color(255, 255, 255));
        gamePanel.add(gameScoreL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        highScoreL1.setFont(new java.awt.Font("Tahoma", 1, 14));
        highScoreL1.setForeground(new java.awt.Color(255, 255, 255));
        highScoreL1.setText("High Score:");
        gamePanel.add(highScoreL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, -1, -1));

        highScoreL2.setFont(new java.awt.Font("Tahoma", 1, 14));
        highScoreL2.setForeground(new java.awt.Color(255, 255, 255));
        gamePanel.add(highScoreL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, -1, -1));

        correctMsgL.setFont(new java.awt.Font("Arial", 1, 24));
        correctMsgL.setForeground(new java.awt.Color(0, 255, 0));
        correctMsgL.setText("That's Right !!");
        gamePanel.add(correctMsgL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        startMsg1L.setFont(new java.awt.Font("Arial", 1, 18));
        startMsg1L.setForeground(new java.awt.Color(51, 255, 255));
        startMsg1L.setText("Remember the sequence that will");
        gamePanel.add(startMsg1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, -1, -1));

        startMsg2L.setFont(new java.awt.Font("Arial", 1, 18));
        startMsg2L.setForeground(new java.awt.Color(51, 255, 255));
        startMsg2L.setText("be displayed on clicking Start.");
        gamePanel.add(startMsg2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 275, -1, -1));

        submitMsg1L.setFont(new java.awt.Font("Arial", 1, 18));
        submitMsg1L.setForeground(new java.awt.Color(255, 255, 0));
        submitMsg1L.setText("Select the boxes that lit up");
        gamePanel.add(submitMsg1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

        submitMsg2L.setFont(new java.awt.Font("Arial", 1, 18));
        submitMsg2L.setForeground(new java.awt.Color(255, 255, 0));
        submitMsg2L.setText("in the same sequence.");
        gamePanel.add(submitMsg2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 175, -1, -1));

        click01TF.setEditable(false);
        gamePanel.add(click01TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 440, 40, 60));

        click02TF.setEditable(false);
        gamePanel.add(click02TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 470, 30, 30));

        click03TF.setEditable(false);
        gamePanel.add(click03TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 30, 30));

        click04TF.setEditable(false);
        gamePanel.add(click04TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 470, 30, 30));

        click05TF.setEditable(false);
        gamePanel.add(click05TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 30, 30));

        click06TF.setEditable(false);
        gamePanel.add(click06TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 470, 30, 30));

        click07TF.setEditable(false);
        gamePanel.add(click07TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 470, 30, 30));

        click08TF.setEditable(false);
        gamePanel.add(click08TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 470, 30, 30));

        click09TF.setEditable(false);
        gamePanel.add(click09TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 30, 30));

        click10TF.setEditable(false);
        gamePanel.add(click10TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, 30, 30));

        click11TF.setEditable(false);
        gamePanel.add(click11TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 30, 30));

        click12TF.setEditable(false);
        gamePanel.add(click12TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 470, 30, 30));

        click13TF.setEditable(false);
        gamePanel.add(click13TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 30, 30));

        click14TF.setEditable(false);
        gamePanel.add(click14TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, 30, 30));

        click15TF.setEditable(false);
        gamePanel.add(click15TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 30, 30));

        yourClicksTF.setForeground(new java.awt.Color(255, 255, 255));
        yourClicksTF.setText("Your Clicks:");
        gamePanel.add(yourClicksTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, -1, -1));

        rememberTheSequencePic3L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/06.jpg"))); // NOI18N
        gamePanel.add(rememberTheSequencePic3L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        getContentPane().add(gamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 550));

        gameOverPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gameOverL.setFont(new java.awt.Font("Arial", 1, 48));
        gameOverL.setForeground(new java.awt.Color(51, 255, 255));
        gameOverL.setText("Game Over");
        gameOverPanel.add(gameOverL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        gameScoreL.setFont(new java.awt.Font("Elephant", 1, 20));
        gameScoreL.setForeground(new java.awt.Color(0, 0, 153));
        gameScoreL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameScoreL.setOpaque(true);
        gameOverPanel.add(gameScoreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 250, 30));

        highScoreL.setFont(new java.awt.Font("Elephant", 1, 20));
        highScoreL.setForeground(new java.awt.Color(51, 204, 0));
        highScoreL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highScoreL.setOpaque(true);
        gameOverPanel.add(highScoreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 250, 30));

        playAgainBtn.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 24));
        playAgainBtn.setText("Play Again");
        playAgainBtn.setMaximumSize(new java.awt.Dimension(200, 70));
        playAgainBtn.setMinimumSize(new java.awt.Dimension(200, 70));
        playAgainBtn.setPreferredSize(new java.awt.Dimension(200, 70));
        playAgainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainBtnActionPerformed(evt);
            }
        });
        gameOverPanel.add(playAgainBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, 200, 70));

        rememberTheSequencePic4L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/10.jpg"))); // NOI18N
        gameOverPanel.add(rememberTheSequencePic4L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        getContentPane().add(gameOverPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (begin) {
            if (highScore == 0) {
                newHighScore = true;
            } else {
                newHighScore = false;
            }

            clickable = false;
            begin = false;
            exit = true;

            gameLevel = 1;

            gameScore = 0;
            gameScoreL2.setText(Integer.toString(gameScore));

            correctMsgL.setVisible(false);
            submitMsg1L.setVisible(false);
            submitMsg2L.setVisible(false);

            startMsg1L.setVisible(true);
            startMsg2L.setVisible(true);

            gamePanel.setVisible(false);
            gameOverPanel.setVisible(false);

            coverPanel.setVisible(false);
        }

        setBoxNormal(1, 1, 1, 1);
    }//GEN-LAST:event_formWindowActivated

    private void box1TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1TFMouseEntered
        if (clickable) {
            setBoxHighlight(1, 0, 0, 0);
        }
    }//GEN-LAST:event_box1TFMouseEntered

    private void box2TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box2TFMouseEntered
        if (clickable) {
            setBoxHighlight(0, 1, 0, 0);
        }
    }//GEN-LAST:event_box2TFMouseEntered

    private void box3TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box3TFMouseEntered
        if (clickable) {
            setBoxHighlight(0, 0, 1, 0);
        }
    }//GEN-LAST:event_box3TFMouseEntered

    private void box4TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box4TFMouseEntered
        if (clickable) {
            setBoxHighlight(0, 0, 0, 1);
        }
    }//GEN-LAST:event_box4TFMouseEntered

    private void box1TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1TFMouseExited
        if (clickable) {
            setBoxNormal(1, 0, 0, 0);
        }
    }//GEN-LAST:event_box1TFMouseExited

    private void box2TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box2TFMouseExited
        if (clickable) {
            setBoxNormal(0, 1, 0, 0);
        }
    }//GEN-LAST:event_box2TFMouseExited

    private void box3TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box3TFMouseExited
        if (clickable) {
            setBoxNormal(0, 0, 1, 0);
        }
    }//GEN-LAST:event_box3TFMouseExited

    private void box4TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box4TFMouseExited
        if (clickable) {
            setBoxNormal(0, 0, 0, 1);
        }
    }//GEN-LAST:event_box4TFMouseExited

    private void box1TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1TFMouseClicked
        if (clickable) {
            updateClickHistory(1);

            if (sequence[currentLevel] == 1) {
                playAudio(4);

                gameScore += currentLevel;
                gameScoreL2.setText(Integer.toString(gameScore));

                if (gameScore > highScore) {

                    if (!newHighScore && highScore != 0) {
                        newHighScore = true;
                        playAudio(6);
                        JOptionPane.showMessageDialog(this, "New High Score achieved !!");
                    }

                    highScore = gameScore;
                    highScoreL2.setText(Integer.toString(highScore));

                    try {
                        Class.forName("java.sql.DriverManager");
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gamezonedata", "root", "12345");
                        Statement stmt = (Statement) con.createStatement();
                        String query = "UPDATE highscores SET RememberTheSequence = '" + highScore + "' WHERE Username = '" + username + "';";
                        stmt.executeUpdate(query);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
                if (++currentLevel > gameLevel) {
                    newLevel();
                }
            } else {
                gameOver();
            }
        }
    }//GEN-LAST:event_box1TFMouseClicked

    private void box2TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box2TFMouseClicked
        if (clickable) {
            updateClickHistory(2);

            if (sequence[currentLevel] == 2) {
                playAudio(4);

                gameScore += currentLevel;
                gameScoreL2.setText(Integer.toString(gameScore));

                if (gameScore > highScore) {

                    if (!newHighScore && highScore != 0) {
                        newHighScore = true;
                        playAudio(6);
                        JOptionPane.showMessageDialog(this, "New High Score achieved !!");
                    }

                    highScore = gameScore;
                    highScoreL2.setText(Integer.toString(highScore));

                    try {
                        Class.forName("java.sql.DriverManager");
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gamezonedata", "root", "12345");
                        Statement stmt = (Statement) con.createStatement();
                        String query = "UPDATE highscores SET RememberTheSequence = '" + highScore + "' WHERE Username = '" + username + "';";
                        stmt.executeUpdate(query);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
                if (++currentLevel > gameLevel) {
                    newLevel();
                }
            } else {
                gameOver();
            }
        }
    }//GEN-LAST:event_box2TFMouseClicked

    private void box3TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box3TFMouseClicked
        if (clickable) {
            updateClickHistory(3);

            if (sequence[currentLevel] == 3) {
                playAudio(4);

                gameScore += currentLevel;
                gameScoreL2.setText(Integer.toString(gameScore));

                if (gameScore > highScore) {

                    if (!newHighScore && highScore != 0) {
                        newHighScore = true;
                        playAudio(6);
                        JOptionPane.showMessageDialog(this, "New High Score achieved !!");
                    }

                    highScore = gameScore;
                    highScoreL2.setText(Integer.toString(highScore));

                    try {
                        Class.forName("java.sql.DriverManager");
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gamezonedata", "root", "12345");
                        Statement stmt = (Statement) con.createStatement();
                        String query = "UPDATE highscores SET RememberTheSequence = '" + highScore + "' WHERE Username = '" + username + "';";
                        stmt.executeUpdate(query);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
                if (++currentLevel > gameLevel) {
                    newLevel();
                }
            } else {
                gameOver();
            }
        }
    }//GEN-LAST:event_box3TFMouseClicked

    private void box4TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box4TFMouseClicked
        if (clickable) {
            updateClickHistory(4);
            if (sequence[currentLevel] == 4) {
                playAudio(4);

                gameScore += currentLevel;
                gameScoreL2.setText(Integer.toString(gameScore));

                if (gameScore > highScore) {

                    if (!newHighScore && highScore != 0) {
                        newHighScore = true;
                        playAudio(6);
                        JOptionPane.showMessageDialog(this, "New High Score achieved !!");
                    }

                    highScore = gameScore;
                    highScoreL2.setText(Integer.toString(highScore));

                    try {
                        Class.forName("java.sql.DriverManager");
                        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gamezonedata", "root", "12345");
                        Statement stmt = (Statement) con.createStatement();
                        String query = "UPDATE highscores SET RememberTheSequence = '" + highScore + "' WHERE Username = '" + username + "';";
                        stmt.executeUpdate(query);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
                if (++currentLevel > gameLevel) {
                    newLevel();
                }
            } else {
                gameOver();
            }
        }
    }//GEN-LAST:event_box4TFMouseClicked

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        startBtn.setVisible(false);

        startMsg1L.setVisible(false);
        startMsg2L.setVisible(false);

        exit = false;

        sequence = new int[gameLevel + 1];

        for (int i = 1; i <= gameLevel; i++) {
            sequence[i] = (int) (Math.random() * 4 + 1);
        }

        playSequence(msTimeBegin, msTimeBegin + msTimeFlash);
    }//GEN-LAST:event_startBtnActionPerformed

    private void box1TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1TFMousePressed
        if (clickable) {
            setBoxPressed(1, 0, 0, 0);
        }
    }//GEN-LAST:event_box1TFMousePressed

    private void box1TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1TFMouseReleased
        if (clickable) {
            setBoxHighlight(1, 0, 0, 0);
        }
    }//GEN-LAST:event_box1TFMouseReleased

    private void box2TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box2TFMousePressed
        if (clickable) {
            setBoxPressed(0, 1, 0, 0);
        }
    }//GEN-LAST:event_box2TFMousePressed

    private void box2TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box2TFMouseReleased
        if (clickable) {
            setBoxHighlight(0, 1, 0, 0);
        }
    }//GEN-LAST:event_box2TFMouseReleased

    private void box3TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box3TFMousePressed
        if (clickable) {
            setBoxPressed(0, 0, 1, 0);
        }
    }//GEN-LAST:event_box3TFMousePressed

    private void box3TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box3TFMouseReleased
        if (clickable) {
            setBoxHighlight(0, 0, 1, 0);
        }
    }//GEN-LAST:event_box3TFMouseReleased

    private void box4TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box4TFMousePressed
        if (clickable) {
            setBoxPressed(0, 0, 0, 1);
        }
    }//GEN-LAST:event_box4TFMousePressed

    private void box4TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box4TFMouseReleased
        if (clickable) {
            setBoxHighlight(0, 0, 0, 1);
        }
    }//GEN-LAST:event_box4TFMouseReleased

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        if (!exit) {
            playAudio(0);
            int reply = JOptionPane.showConfirmDialog(this, "Game In Progress !!\nAre you sure you want to exit", "Caution !!", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                exit = true;
            }
        }

        if (exit) {
            homePage frame0 = new homePage();
            rememberTheSequence.this.setVisible(false);
            frame0.setVisible(true);
            frame0.dataPass0(username);
        }
    }//GEN-LAST:event_returnBtnActionPerformed

    private void proceedToGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedToGameBtnActionPerformed
        instructionsPanel.setVisible(false);

        gamePanel.setVisible(true);

        playAudio(1);
    }//GEN-LAST:event_proceedToGameBtnActionPerformed

    private void playAgainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainBtnActionPerformed
        gameOverPanel.setVisible(false);

        clickable = false;
        exit = true;

        gameLevel = 1;

        gameScore = 0;
        gameScoreL2.setText(Integer.toString(gameScore));

        highScoreL2.setText(Integer.toString(highScore));

        if (highScore == 0) {
            newHighScore = true;
        } else {
            newHighScore = false;
        }

        correctMsgL.setVisible(false);
        submitMsg1L.setVisible(false);
        submitMsg2L.setVisible(false);

        startBtn.setText("Start Game");
        startBtn.setVisible(true);

        startMsg1L.setVisible(true);
        startMsg2L.setVisible(true);

        gamePanel.setVisible(true);

        playAudio(1);
    }//GEN-LAST:event_playAgainBtnActionPerformed

    public void playSequence(int msDelay, int msFlash) {
        currentLevel = 1;
        for (int i = 1; i <= gameLevel; i++) {
            timerDelay = new Timer();
            timerFlash = new Timer();
            timerDelay.schedule(new taskDelay(), ((msDelay + msFlash) * (i - 1)) + msDelay);
            timerFlash.schedule(new taskFlash(), ((msDelay + msFlash) * (i - 1)) + msDelay + msFlash);
        }
    }

    class taskDelay extends TimerTask {
        public void run() {
            playAudio(2);
            switch (sequence[currentLevel]) {
                case 1:
                    setBoxHighlight(1, 0, 0, 0);
                    break;
                case 2:
                    setBoxHighlight(0, 1, 0, 0);
                    break;
                case 3:
                    setBoxHighlight(0, 0, 1, 0);
                    break;
                case 4:
                    setBoxHighlight(0, 0, 0, 1);
                    break;
            }
        }
    }

    class taskFlash extends TimerTask {
        public void run() {
            setBoxNormal(1, 1, 1, 1);
            if (++currentLevel > gameLevel) {
                submitMsg1L.setVisible(true);
                submitMsg2L.setVisible(true);

                clickable = true;
                currentLevel = 1;
            }
        }
    }

    public void newLevel() {
        clickable = false;

        gameLevel++;

        submitMsg1L.setVisible(false);
        submitMsg2L.setVisible(false);
        correctMsgL.setVisible(true);

        setBoxNormal(1, 1, 1, 1);

        nextLevel(msTimeEnd);
    }

    public void nextLevel(int msTime) {
        timerCorrect = new Timer();
        timerCorrect.schedule(new taskCorrect(), msTime);
    }

    class taskCorrect extends TimerTask {
        public void run() {
            correctMsgL.setVisible(false);

            startBtn.setText("Start Level " + gameLevel);
            startBtn.setVisible(true);

            startMsg1L.setVisible(true);
            startMsg2L.setVisible(true);
        }
    }

    public void gameOver() {
        end = true;
        exit = true;
        clickable = false;

        submitMsg1L.setVisible(false);
        submitMsg2L.setVisible(false);

        setBoxNormal(1, 1, 1, 1);
        switch (sequence[currentLevel]) {
            case 1:
                setBoxHighlight(1, 0, 0, 0);
                break;
            case 2:
                setBoxHighlight(0, 1, 0, 0);
                break;
            case 3:
                setBoxHighlight(0, 0, 1, 0);
                break;
            case 4:
                setBoxHighlight(0, 0, 0, 1);
                break;
        }

        playAudio(7);
        JOptionPane.showMessageDialog(this, "Wrong !!");

        setBoxNormal(1, 1, 1, 1);
        clearClickHistory();

        gameScoreL.setText("\nGame Score: " + gameScore);
        highScoreL.setText("\nHigh Score: " + highScore);

        gamePanel.setVisible(false);
        gameOverPanel.setVisible(true);
    }

    public void clearClickHistory() {
        click15TF.setBackground(Color.decode("0XF0F0F0"));
        click14TF.setBackground(Color.decode("0XF0F0F0"));
        click13TF.setBackground(Color.decode("0XF0F0F0"));
        click12TF.setBackground(Color.decode("0XF0F0F0"));
        click11TF.setBackground(Color.decode("0XF0F0F0"));
        click10TF.setBackground(Color.decode("0XF0F0F0"));
        click09TF.setBackground(Color.decode("0XF0F0F0"));
        click08TF.setBackground(Color.decode("0XF0F0F0"));
        click07TF.setBackground(Color.decode("0XF0F0F0"));
        click06TF.setBackground(Color.decode("0XF0F0F0"));
        click05TF.setBackground(Color.decode("0XF0F0F0"));
        click04TF.setBackground(Color.decode("0XF0F0F0"));
        click03TF.setBackground(Color.decode("0XF0F0F0"));
        click02TF.setBackground(Color.decode("0XF0F0F0"));
        click01TF.setBackground(Color.decode("0XF0F0F0"));
    }

    public void updateClickHistory(int c) {
        click15TF.setBackground(click14TF.getBackground());
        click14TF.setBackground(click13TF.getBackground());
        click13TF.setBackground(click12TF.getBackground());
        click12TF.setBackground(click11TF.getBackground());
        click11TF.setBackground(click10TF.getBackground());
        click10TF.setBackground(click09TF.getBackground());
        click09TF.setBackground(click08TF.getBackground());
        click08TF.setBackground(click07TF.getBackground());
        click07TF.setBackground(click06TF.getBackground());
        click06TF.setBackground(click05TF.getBackground());
        click05TF.setBackground(click04TF.getBackground());
        click04TF.setBackground(click03TF.getBackground());
        click03TF.setBackground(click02TF.getBackground());
        click02TF.setBackground(click01TF.getBackground());
        if (c == 1) {
            click01TF.setBackground(Color.decode("0xFF0000"));
        }
        if (c == 2) {
            click01TF.setBackground(Color.decode("0x00FF00"));
        }
        if (c == 3) {
            click01TF.setBackground(Color.decode("0x0000FF"));
        }
        if (c == 4) {
            click01TF.setBackground(Color.decode("0XFFFF00"));
        }
    }

    public void setBoxNormal(int b1, int b2, int b3, int b4) {
        if (b1 == 1) {
            box1TF.setBackground(Color.decode("0x770000"));
        }
        if (b2 == 1) {
            box2TF.setBackground(Color.decode("0x007700"));
        }
        if (b3 == 1) {
            box3TF.setBackground(Color.decode("0x000077"));
        }
        if (b4 == 1) {
            box4TF.setBackground(Color.decode("0X777700"));
        }
    }

    public void setBoxPressed(int b1, int b2, int b3, int b4) {
        if (b1 == 1) {
            box1TF.setBackground(Color.decode("0xCC0000"));
        }
        if (b2 == 1) {
            box2TF.setBackground(Color.decode("0x00CC00"));
        }
        if (b3 == 1) {
            box3TF.setBackground(Color.decode("0x0000CC"));
        }
        if (b4 == 1) {
            box4TF.setBackground(Color.decode("0XCCCC00"));
        }
    }

    public void setBoxHighlight(int b1, int b2, int b3, int b4) {
        if (b1 == 1) {
            box1TF.setBackground(Color.decode("0xFF0000"));
        }
        if (b2 == 1) {
            box2TF.setBackground(Color.decode("0x00FF00"));
        }
        if (b3 == 1) {
            box3TF.setBackground(Color.decode("0x0000FF"));
        }
        if (b4 == 1) {
            box4TF.setBackground(Color.decode("0XFFFF00"));
        }
    }

    public void dataPass1(String uName, int sc) {
        username = uName;
        highScore = sc;
        nameL.setText(username);
        highScoreL2.setText("" + highScore);
    }

    public void playAudio(int track) {
        switch (track) {
            case 0:
                Toolkit.getDefaultToolkit().beep();
                break;
            case 1:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\proceedToGame.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 2:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\singleBeep.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 3:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\glassPing.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 4:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\singleCoinDrop.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 5:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\multipleCoinDrop.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 6:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\tadaHighScore.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 7:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\buzzerGameOver.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new rememberTheSequence().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField box1TF;
    private javax.swing.JTextField box2TF;
    private javax.swing.JTextField box3TF;
    private javax.swing.JTextField box4TF;
    private javax.swing.JTextField click01TF;
    private javax.swing.JTextField click02TF;
    private javax.swing.JTextField click03TF;
    private javax.swing.JTextField click04TF;
    private javax.swing.JTextField click05TF;
    private javax.swing.JTextField click06TF;
    private javax.swing.JTextField click07TF;
    private javax.swing.JTextField click08TF;
    private javax.swing.JTextField click09TF;
    private javax.swing.JTextField click10TF;
    private javax.swing.JTextField click11TF;
    private javax.swing.JTextField click12TF;
    private javax.swing.JTextField click13TF;
    private javax.swing.JTextField click14TF;
    private javax.swing.JTextField click15TF;
    private javax.swing.JLabel correctMsgL;
    private javax.swing.JPanel coverPanel;
    private javax.swing.JLabel gameOverL;
    private javax.swing.JPanel gameOverPanel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel gameScoreL;
    private javax.swing.JLabel gameScoreL1;
    private javax.swing.JLabel gameScoreL2;
    private javax.swing.JLabel highScoreL;
    private javax.swing.JLabel highScoreL1;
    private javax.swing.JLabel highScoreL2;
    private javax.swing.JPanel homeScreenPanel;
    private javax.swing.JTextField instructions1TF;
    private javax.swing.JTextArea instructions2TA;
    private javax.swing.JPanel instructionsPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nameL;
    private javax.swing.JButton playAgainBtn;
    private javax.swing.JButton proceedToGameBtn;
    private javax.swing.JLabel rememberTheSequenceL;
    private javax.swing.JLabel rememberTheSequencePic1L;
    private javax.swing.JLabel rememberTheSequencePic2L;
    private javax.swing.JLabel rememberTheSequencePic3L;
    private javax.swing.JLabel rememberTheSequencePic4L;
    private javax.swing.JButton returnBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JLabel startMsg1L;
    private javax.swing.JLabel startMsg2L;
    private javax.swing.JLabel submitMsg1L;
    private javax.swing.JLabel submitMsg2L;
    private javax.swing.JLabel welcomeL;
    private javax.swing.JLabel yourClicksTF;
    // End of variables declaration//GEN-END:variables
}
