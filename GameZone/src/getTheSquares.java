import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;

import java.awt.*;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

import java.util.*;

import javax.swing.JOptionPane;

/*
 * getTheSquares.java
 *
 * Created on 23 May, 2016, 10:07:26 AM
 */
/**
 *
 * @author Temp
 */
public class getTheSquares extends javax.swing.JFrame {

    Timer timerDelay;
    Timer timerFlash;
    Timer timerCorrect;

    int msTimeBegin = 750;
    int msTimeEnd = 1500;
    int msTimeMaximum = 2200;
    int msTimeMinimum = 200;
    int msTimeStep = 200;
    int msTimeInterval;
    int maxMultiple = 2;

    String colourNormal;
    String colourHighlighted;
    String colourPressed;
    String username = "";

    boolean begin = true;
    boolean clickable;
    boolean newHighScore;
    boolean exit;
    boolean selected[] = new boolean[17];
    boolean generated[] = new boolean[17];

    int gameScore;
    int highScore;
    int numberOfBoxes;

    /** Creates new form getTheSquares */
    public getTheSquares() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coverPanel = new javax.swing.JPanel();
        homeScreenPanel = new javax.swing.JPanel();
        welcomeL = new javax.swing.JLabel();
        nameL = new javax.swing.JLabel();
        returnBtn = new javax.swing.JButton();
        getTheSquaresL = new javax.swing.JLabel();
        getTheSquaresPic1L = new javax.swing.JLabel();
        instructionsPanel = new javax.swing.JPanel();
        instructions1TF = new javax.swing.JTextField();
        proceedToGame = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        instructions2TA = new javax.swing.JTextArea();
        getTheSquaresPic2L = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        box01TF = new javax.swing.JTextField();
        box02TF = new javax.swing.JTextField();
        box03TF = new javax.swing.JTextField();
        box04TF = new javax.swing.JTextField();
        box05TF = new javax.swing.JTextField();
        box06TF = new javax.swing.JTextField();
        box07TF = new javax.swing.JTextField();
        box08TF = new javax.swing.JTextField();
        box09TF = new javax.swing.JTextField();
        box10TF = new javax.swing.JTextField();
        box11TF = new javax.swing.JTextField();
        box12TF = new javax.swing.JTextField();
        box13TF = new javax.swing.JTextField();
        box14TF = new javax.swing.JTextField();
        box15TF = new javax.swing.JTextField();
        box16TF = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        gameScore1L = new javax.swing.JLabel();
        gameScore2L = new javax.swing.JLabel();
        highScore1L = new javax.swing.JLabel();
        highScore2L = new javax.swing.JLabel();
        correctMsgL = new javax.swing.JLabel();
        startMsg1L = new javax.swing.JLabel();
        startMsg2L = new javax.swing.JLabel();
        submitMsg1L = new javax.swing.JLabel();
        submitMsg2L = new javax.swing.JLabel();
        getTheSquaresPic3L = new javax.swing.JLabel();
        gameOverPanel = new javax.swing.JPanel();
        gameOverL = new javax.swing.JLabel();
        gameScoreL = new javax.swing.JLabel();
        highScoreL = new javax.swing.JLabel();
        playAgainBtn = new javax.swing.JButton();
        rememberTheSequencePic4L = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Get The Squares");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        coverPanel.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(coverPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        homeScreenPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        homeScreenPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        welcomeL.setFont(new java.awt.Font("Calibri", 3, 14));
        welcomeL.setText("Welcome");
        homeScreenPanel.add(welcomeL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        nameL.setFont(new java.awt.Font("Calibri", 3, 14));
        homeScreenPanel.add(nameL, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        returnBtn.setFont(new java.awt.Font("Times New Roman", 1, 12));
        returnBtn.setText("Back To Main Menu");
        returnBtn.setPreferredSize(new java.awt.Dimension(90, 23));
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });
        homeScreenPanel.add(returnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 15, 150, -1));

        getTheSquaresL.setFont(new java.awt.Font("Times New Roman", 1, 24));
        getTheSquaresL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getTheSquaresL.setText("GET THE SQUARES");
        homeScreenPanel.add(getTheSquaresL, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 15, 240, 20));

        getTheSquaresPic1L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/5.jpg"))); // NOI18N
        homeScreenPanel.add(getTheSquaresPic1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 50));

        getContentPane().add(homeScreenPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 50));

        instructionsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        instructions1TF.setEditable(false);
        instructions1TF.setFont(new java.awt.Font("Calibri", 3, 20));
        instructions1TF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        instructions1TF.setText("INSTRUCTIONS");
        instructionsPanel.add(instructions1TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 700, 30));

        proceedToGame.setFont(new java.awt.Font("Tahoma", 1, 16));
        proceedToGame.setText("Proceed To Game");
        proceedToGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedToGameActionPerformed(evt);
            }
        });
        instructionsPanel.add(proceedToGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, 200, 30));

        instructions2TA.setColumns(20);
        instructions2TA.setEditable(false);
        instructions2TA.setFont(new java.awt.Font("Monospaced", 0, 14));
        instructions2TA.setRows(5);
        instructions2TA.setText("\n    There is a grid of sixteen squares.\n\n    At a time, some number of these squares will light up.\n\n    Your objective is to remember which squares light up and select them.\n\n    After selecting the squares, press the 'Submit' button.\n\n    After completion, press the 'Start' button to view the next set of squares.\n\n    Have Fun !!");
        instructions2TA.setBorder(null);
        instructions2TA.setOpaque(false);
        jScrollPane2.setViewportView(instructions2TA);

        instructionsPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 700, 265));

        getTheSquaresPic2L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/09.jpg"))); // NOI18N
        instructionsPanel.add(getTheSquaresPic2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        getContentPane().add(instructionsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 550));

        gamePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box01TF.setEditable(false);
        box01TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box01TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box01TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box01TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box01TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box01TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box01TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box01TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box01TFMouseReleased(evt);
            }
        });
        gamePanel.add(box01TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 80, 80));

        box02TF.setEditable(false);
        box02TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box02TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box02TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box02TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box02TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box02TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box02TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box02TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box02TFMouseReleased(evt);
            }
        });
        gamePanel.add(box02TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 80, 80));

        box03TF.setEditable(false);
        box03TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box03TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box03TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box03TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box03TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box03TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box03TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box03TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box03TFMouseReleased(evt);
            }
        });
        gamePanel.add(box03TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 80, 80));

        box04TF.setEditable(false);
        box04TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box04TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box04TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box04TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box04TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box04TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box04TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box04TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box04TFMouseReleased(evt);
            }
        });
        gamePanel.add(box04TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 100, 80, 80));

        box05TF.setEditable(false);
        box05TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box05TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box05TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box05TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box05TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box05TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box05TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box05TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box05TFMouseReleased(evt);
            }
        });
        gamePanel.add(box05TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 80, 80));

        box06TF.setEditable(false);
        box06TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box06TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box06TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box06TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box06TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box06TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box06TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box06TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box06TFMouseReleased(evt);
            }
        });
        gamePanel.add(box06TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, 80, 80));

        box07TF.setEditable(false);
        box07TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box07TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box07TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box07TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box07TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box07TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box07TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box07TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box07TFMouseReleased(evt);
            }
        });
        gamePanel.add(box07TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 200, 80, 80));

        box08TF.setEditable(false);
        box08TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box08TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box08TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box08TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box08TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box08TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box08TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box08TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box08TFMouseReleased(evt);
            }
        });
        gamePanel.add(box08TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 200, 80, 80));

        box09TF.setEditable(false);
        box09TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box09TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box09TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box09TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box09TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box09TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box09TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box09TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box09TFMouseReleased(evt);
            }
        });
        gamePanel.add(box09TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 80, 80));

        box10TF.setEditable(false);
        box10TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box10TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box10TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box10TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box10TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box10TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box10TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box10TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box10TFMouseReleased(evt);
            }
        });
        gamePanel.add(box10TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 80, 80));

        box11TF.setEditable(false);
        box11TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box11TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box11TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box11TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box11TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box11TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box11TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box11TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box11TFMouseReleased(evt);
            }
        });
        gamePanel.add(box11TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 80, 80));

        box12TF.setEditable(false);
        box12TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box12TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box12TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box12TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box12TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box12TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box12TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box12TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box12TFMouseReleased(evt);
            }
        });
        gamePanel.add(box12TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 300, 80, 80));

        box13TF.setEditable(false);
        box13TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box13TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box13TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box13TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box13TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box13TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box13TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box13TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box13TFMouseReleased(evt);
            }
        });
        gamePanel.add(box13TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, 80, 80));

        box14TF.setEditable(false);
        box14TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box14TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box14TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box14TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box14TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box14TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box14TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box14TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box14TFMouseReleased(evt);
            }
        });
        gamePanel.add(box14TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, 80, 80));

        box15TF.setEditable(false);
        box15TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box15TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box15TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box15TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box15TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box15TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box15TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box15TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box15TFMouseReleased(evt);
            }
        });
        gamePanel.add(box15TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 80, 80));

        box16TF.setEditable(false);
        box16TF.setMaximumSize(new java.awt.Dimension(80, 80));
        box16TF.setMinimumSize(new java.awt.Dimension(80, 80));
        box16TF.setPreferredSize(new java.awt.Dimension(80, 80));
        box16TF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box16TFMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                box16TFMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                box16TFMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                box16TFMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                box16TFMouseReleased(evt);
            }
        });
        gamePanel.add(box16TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 400, 80, 80));

        submitBtn.setFont(new java.awt.Font("Arial", 1, 24));
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        gamePanel.add(submitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        startBtn.setFont(new java.awt.Font("Arial", 1, 24));
        startBtn.setText("Start Game");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });
        gamePanel.add(startBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        gameScore1L.setFont(new java.awt.Font("Tahoma", 1, 14));
        gameScore1L.setForeground(new java.awt.Color(0, 51, 153));
        gameScore1L.setText("Game Score:");
        gamePanel.add(gameScore1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        gameScore2L.setFont(new java.awt.Font("Tahoma", 1, 14));
        gameScore2L.setForeground(new java.awt.Color(0, 51, 153));
        gamePanel.add(gameScore2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, -1));

        highScore1L.setFont(new java.awt.Font("Tahoma", 1, 14));
        highScore1L.setForeground(new java.awt.Color(0, 51, 153));
        highScore1L.setText("High Score:");
        gamePanel.add(highScore1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, -1, -1));

        highScore2L.setFont(new java.awt.Font("Tahoma", 1, 14));
        highScore2L.setForeground(new java.awt.Color(0, 51, 153));
        gamePanel.add(highScore2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, -1, -1));

        correctMsgL.setFont(new java.awt.Font("Arial", 1, 24));
        correctMsgL.setForeground(new java.awt.Color(0, 102, 0));
        correctMsgL.setText("That's Right !!");
        gamePanel.add(correctMsgL, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        startMsg1L.setFont(new java.awt.Font("Arial", 1, 18));
        startMsg1L.setForeground(new java.awt.Color(0, 0, 255));
        startMsg1L.setText("Remember the boxes that");
        gamePanel.add(startMsg1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        startMsg2L.setFont(new java.awt.Font("Arial", 1, 18));
        startMsg2L.setForeground(new java.awt.Color(0, 0, 255));
        startMsg2L.setText("light up on clicking Start.");
        gamePanel.add(startMsg2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 325, -1, -1));

        submitMsg1L.setFont(new java.awt.Font("Arial", 1, 18));
        submitMsg1L.setForeground(new java.awt.Color(255, 0, 0));
        submitMsg1L.setText("Select the boxes that had");
        gamePanel.add(submitMsg1L, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        submitMsg2L.setFont(new java.awt.Font("Arial", 1, 18));
        submitMsg2L.setForeground(new java.awt.Color(255, 0, 0));
        submitMsg2L.setText("lit up and click Submit.");
        gamePanel.add(submitMsg2L, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 325, -1, -1));

        getTheSquaresPic3L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/07.jpg"))); // NOI18N
        gamePanel.add(getTheSquaresPic3L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        getContentPane().add(gamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 550));

        gameOverPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gameOverL.setFont(new java.awt.Font("Arial", 1, 48));
        gameOverL.setForeground(new java.awt.Color(51, 255, 255));
        gameOverL.setText("Game Over");
        gameOverPanel.add(gameOverL, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        gameScoreL.setFont(new java.awt.Font("Elephant", 1, 20));
        gameScoreL.setForeground(new java.awt.Color(0, 0, 153));
        gameScoreL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameScoreL.setOpaque(true);
        gameOverPanel.add(gameScoreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 250, 30));

        highScoreL.setFont(new java.awt.Font("Elephant", 1, 20));
        highScoreL.setForeground(new java.awt.Color(51, 204, 0));
        highScoreL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highScoreL.setOpaque(true);
        gameOverPanel.add(highScoreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 250, 30));

        playAgainBtn.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 24));
        playAgainBtn.setText("Play Again");
        playAgainBtn.setMaximumSize(new java.awt.Dimension(200, 70));
        playAgainBtn.setMinimumSize(new java.awt.Dimension(200, 70));
        playAgainBtn.setPreferredSize(new java.awt.Dimension(200, 70));
        playAgainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainBtnActionPerformed(evt);
            }
        });
        gameOverPanel.add(playAgainBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, 200, 70));

        rememberTheSequencePic4L.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/10.jpg"))); // NOI18N
        gameOverPanel.add(rememberTheSequencePic4L, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        getContentPane().add(gameOverPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 800, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (begin) {
            begin = false;
            exit = true;

            msTimeInterval = msTimeMaximum;

            colourNormal = "0x770000";
            colourHighlighted = "0xFF0000";
            colourPressed = "0xCC0000";

            gameScore = 0;
            gameScore2L.setText(Integer.toString(gameScore));

            correctMsgL.setVisible(false);

            submitBtn.setVisible(false);
            submitMsg1L.setVisible(false);
            submitMsg2L.setVisible(false);

            startMsg1L.setVisible(true);
            startMsg2L.setVisible(true);


            gamePanel.setVisible(false);
            gameOverPanel.setVisible(false);

            coverPanel.setVisible(false);

            clickable = false;
            if (highScore == 0) {
                newHighScore = true;
            } else {
                newHighScore = false;
            }

            for (int i = 1; i <= 16; i++) {
                setBoxNormal(i);
            }
        }
    }//GEN-LAST:event_formWindowActivated

    private void box01TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box01TFMouseEntered
        if (clickable && !selected[1]) {
            setBoxHighlighted(1);
        }
    }//GEN-LAST:event_box01TFMouseEntered

    private void box01TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box01TFMouseExited
        if (clickable && !selected[1]) {
            setBoxNormal(1);
        }
    }//GEN-LAST:event_box01TFMouseExited

    private void box01TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box01TFMousePressed
        if (clickable) {
            setBoxPressed(1);
        }
    }//GEN-LAST:event_box01TFMousePressed

    private void box01TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box01TFMouseReleased
        if (clickable) {
            setBoxHighlighted(1);
        }
    }//GEN-LAST:event_box01TFMouseReleased

    private void box01TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box01TFMouseClicked
        if (clickable) {
            selected[1] = !selected[1];
        }
    }//GEN-LAST:event_box01TFMouseClicked

    private void box02TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box02TFMouseClicked
        if (clickable) {
            selected[2] = !selected[2];
        }
    }//GEN-LAST:event_box02TFMouseClicked

    private void box02TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box02TFMouseEntered
        if (clickable && !selected[2]) {
            setBoxHighlighted(2);
        }
    }//GEN-LAST:event_box02TFMouseEntered

    private void box02TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box02TFMouseExited
        if (clickable && !selected[2]) {
            setBoxNormal(2);
        }
    }//GEN-LAST:event_box02TFMouseExited

    private void box02TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box02TFMousePressed
        if (clickable) {
            setBoxPressed(2);
        }
    }//GEN-LAST:event_box02TFMousePressed

    private void box02TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box02TFMouseReleased
        if (clickable) {
            setBoxHighlighted(2);
        }
    }//GEN-LAST:event_box02TFMouseReleased

    private void box03TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box03TFMouseClicked
        if (clickable) {
            selected[3] = !selected[3];
        }
    }//GEN-LAST:event_box03TFMouseClicked

    private void box03TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box03TFMouseEntered
        if (clickable && !selected[3]) {
            setBoxHighlighted(3);
        }
    }//GEN-LAST:event_box03TFMouseEntered

    private void box03TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box03TFMouseExited
        if (clickable && !selected[3]) {
            setBoxNormal(3);
        }
    }//GEN-LAST:event_box03TFMouseExited

    private void box03TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box03TFMousePressed
        if (clickable) {
            setBoxPressed(3);
        }
    }//GEN-LAST:event_box03TFMousePressed

    private void box03TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box03TFMouseReleased
        if (clickable) {
            setBoxHighlighted(3);
        }
    }//GEN-LAST:event_box03TFMouseReleased

    private void box04TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box04TFMouseClicked
        if (clickable) {
            selected[4] = !selected[4];
        }
    }//GEN-LAST:event_box04TFMouseClicked

    private void box04TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box04TFMouseEntered
        if (clickable && !selected[4]) {
            setBoxHighlighted(4);
        }
    }//GEN-LAST:event_box04TFMouseEntered

    private void box04TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box04TFMouseExited
        if (clickable && !selected[4]) {
            setBoxNormal(4);
        }
    }//GEN-LAST:event_box04TFMouseExited

    private void box04TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box04TFMousePressed
        if (clickable) {
            setBoxPressed(4);
        }
    }//GEN-LAST:event_box04TFMousePressed

    private void box04TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box04TFMouseReleased
        if (clickable) {
            setBoxHighlighted(4);
        }
    }//GEN-LAST:event_box04TFMouseReleased

    private void box05TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box05TFMouseClicked
        if (clickable) {
            selected[5] = !selected[5];
        }
    }//GEN-LAST:event_box05TFMouseClicked

    private void box05TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box05TFMouseEntered
        if (clickable && !selected[5]) {
            setBoxHighlighted(5);
        }
    }//GEN-LAST:event_box05TFMouseEntered

    private void box05TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box05TFMouseExited
        if (clickable && !selected[5]) {
            setBoxNormal(5);
        }
    }//GEN-LAST:event_box05TFMouseExited

    private void box05TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box05TFMousePressed
        if (clickable) {
            setBoxPressed(5);
        }
    }//GEN-LAST:event_box05TFMousePressed

    private void box05TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box05TFMouseReleased
        if (clickable) {
            setBoxHighlighted(5);
        }
    }//GEN-LAST:event_box05TFMouseReleased

    private void box06TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box06TFMouseClicked
        if (clickable) {
            selected[6] = !selected[6];
        }
    }//GEN-LAST:event_box06TFMouseClicked

    private void box06TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box06TFMouseEntered
        if (clickable && !selected[6]) {
            setBoxHighlighted(6);
        }
    }//GEN-LAST:event_box06TFMouseEntered

    private void box06TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box06TFMouseExited
        if (clickable && !selected[6]) {
            setBoxNormal(6);
        }
    }//GEN-LAST:event_box06TFMouseExited

    private void box06TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box06TFMousePressed
        if (clickable) {
            setBoxPressed(6);
        }
    }//GEN-LAST:event_box06TFMousePressed

    private void box06TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box06TFMouseReleased
        if (clickable) {
            setBoxHighlighted(6);
        }
    }//GEN-LAST:event_box06TFMouseReleased

    private void box07TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box07TFMouseClicked
        if (clickable) {
            selected[7] = !selected[7];
        }
    }//GEN-LAST:event_box07TFMouseClicked

    private void box07TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box07TFMouseEntered
        if (clickable && !selected[7]) {
            setBoxHighlighted(7);
        }
    }//GEN-LAST:event_box07TFMouseEntered

    private void box07TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box07TFMouseExited
        if (clickable && !selected[7]) {
            setBoxNormal(7);
        }
    }//GEN-LAST:event_box07TFMouseExited

    private void box07TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box07TFMousePressed
        if (clickable) {
            setBoxPressed(7);
        }
    }//GEN-LAST:event_box07TFMousePressed

    private void box07TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box07TFMouseReleased
        if (clickable) {
            setBoxHighlighted(7);
        }
    }//GEN-LAST:event_box07TFMouseReleased

    private void box08TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box08TFMouseClicked
        if (clickable) {
            selected[8] = !selected[8];
        }
    }//GEN-LAST:event_box08TFMouseClicked

    private void box08TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box08TFMouseEntered
        if (clickable && !selected[8]) {
            setBoxHighlighted(8);
        }
    }//GEN-LAST:event_box08TFMouseEntered

    private void box08TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box08TFMouseExited
        if (clickable && !selected[8]) {
            setBoxNormal(8);
        }
    }//GEN-LAST:event_box08TFMouseExited

    private void box08TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box08TFMousePressed
        if (clickable) {
            setBoxPressed(8);
        }
    }//GEN-LAST:event_box08TFMousePressed

    private void box08TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box08TFMouseReleased
        if (clickable) {
            setBoxHighlighted(8);
        }
    }//GEN-LAST:event_box08TFMouseReleased

    private void box09TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box09TFMouseClicked
        if (clickable) {
            selected[9] = !selected[9];
        }
    }//GEN-LAST:event_box09TFMouseClicked

    private void box09TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box09TFMouseEntered
        if (clickable && !selected[9]) {
            setBoxHighlighted(9);
        }
    }//GEN-LAST:event_box09TFMouseEntered

    private void box09TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box09TFMouseExited
        if (clickable && !selected[9]) {
            setBoxNormal(9);
        }
    }//GEN-LAST:event_box09TFMouseExited

    private void box09TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box09TFMousePressed
        if (clickable) {
            setBoxPressed(9);
        }
    }//GEN-LAST:event_box09TFMousePressed

    private void box09TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box09TFMouseReleased
        if (clickable) {
            setBoxHighlighted(9);
        }
    }//GEN-LAST:event_box09TFMouseReleased

    private void box10TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box10TFMouseClicked
        if (clickable) {
            selected[10] = !selected[10];
        }
    }//GEN-LAST:event_box10TFMouseClicked

    private void box10TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box10TFMouseEntered
        if (clickable && !selected[10]) {
            setBoxHighlighted(10);
        }
    }//GEN-LAST:event_box10TFMouseEntered

    private void box10TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box10TFMouseExited
        if (clickable && !selected[10]) {
            setBoxNormal(10);
        }
    }//GEN-LAST:event_box10TFMouseExited

    private void box10TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box10TFMousePressed
        if (clickable) {
            setBoxPressed(10);
        }
    }//GEN-LAST:event_box10TFMousePressed

    private void box10TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box10TFMouseReleased
        if (clickable) {
            setBoxHighlighted(10);
        }
    }//GEN-LAST:event_box10TFMouseReleased

    private void box11TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box11TFMouseClicked
        if (clickable) {
            selected[11] = !selected[11];
        }
    }//GEN-LAST:event_box11TFMouseClicked

    private void box11TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box11TFMouseEntered
        if (clickable && !selected[11]) {
            setBoxHighlighted(11);
        }
    }//GEN-LAST:event_box11TFMouseEntered

    private void box11TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box11TFMouseExited
        if (clickable && !selected[11]) {
            setBoxNormal(11);
        }
    }//GEN-LAST:event_box11TFMouseExited

    private void box11TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box11TFMousePressed
        if (clickable) {
            setBoxPressed(11);
        }
    }//GEN-LAST:event_box11TFMousePressed

    private void box11TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box11TFMouseReleased
        if (clickable) {
            setBoxHighlighted(11);
        }
    }//GEN-LAST:event_box11TFMouseReleased

    private void box12TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box12TFMouseClicked
        if (clickable) {
            selected[12] = !selected[12];
        }
    }//GEN-LAST:event_box12TFMouseClicked

    private void box12TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box12TFMouseEntered
        if (clickable && !selected[12]) {
            setBoxHighlighted(12);
        }
    }//GEN-LAST:event_box12TFMouseEntered

    private void box12TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box12TFMouseExited
        if (clickable && !selected[12]) {
            setBoxNormal(12);
        }
    }//GEN-LAST:event_box12TFMouseExited

    private void box12TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box12TFMousePressed
        if (clickable) {
            setBoxPressed(12);
        }
    }//GEN-LAST:event_box12TFMousePressed

    private void box12TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box12TFMouseReleased
        if (clickable) {
            setBoxHighlighted(12);
        }
    }//GEN-LAST:event_box12TFMouseReleased

    private void box13TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box13TFMouseClicked
        if (clickable) {
            selected[13] = !selected[13];
        }
    }//GEN-LAST:event_box13TFMouseClicked

    private void box13TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box13TFMouseEntered
        if (clickable && !selected[13]) {
            setBoxHighlighted(13);
        }
    }//GEN-LAST:event_box13TFMouseEntered

    private void box13TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box13TFMouseExited
        if (clickable && !selected[13]) {
            setBoxNormal(13);
        }
    }//GEN-LAST:event_box13TFMouseExited

    private void box13TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box13TFMousePressed
        if (clickable) {
            setBoxPressed(13);
        }
    }//GEN-LAST:event_box13TFMousePressed

    private void box13TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box13TFMouseReleased
        if (clickable) {
            setBoxHighlighted(13);
        }
    }//GEN-LAST:event_box13TFMouseReleased

    private void box14TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box14TFMouseClicked
        if (clickable) {
            selected[14] = !selected[14];
        }
    }//GEN-LAST:event_box14TFMouseClicked

    private void box14TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box14TFMouseEntered
        if (clickable && !selected[14]) {
            setBoxHighlighted(14);
        }
    }//GEN-LAST:event_box14TFMouseEntered

    private void box14TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box14TFMouseExited
        if (clickable && !selected[14]) {
            setBoxNormal(14);
        }
    }//GEN-LAST:event_box14TFMouseExited

    private void box14TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box14TFMousePressed
        if (clickable) {
            setBoxPressed(14);
        }
    }//GEN-LAST:event_box14TFMousePressed

    private void box14TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box14TFMouseReleased
        if (clickable) {
            setBoxHighlighted(14);
        }
    }//GEN-LAST:event_box14TFMouseReleased

    private void box15TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box15TFMouseClicked
        if (clickable) {
            selected[15] = !selected[15];
        }
    }//GEN-LAST:event_box15TFMouseClicked

    private void box15TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box15TFMouseEntered
        if (clickable && !selected[15]) {
            setBoxHighlighted(15);
        }
    }//GEN-LAST:event_box15TFMouseEntered

    private void box15TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box15TFMouseExited
        if (clickable && !selected[15]) {
            setBoxNormal(15);
        }
    }//GEN-LAST:event_box15TFMouseExited

    private void box15TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box15TFMousePressed
        if (clickable) {
            setBoxPressed(15);
        }
    }//GEN-LAST:event_box15TFMousePressed

    private void box15TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box15TFMouseReleased
        if (clickable) {
            setBoxHighlighted(15);
        }
    }//GEN-LAST:event_box15TFMouseReleased

    private void box16TFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box16TFMouseClicked
        if (clickable) {
            selected[16] = !selected[16];
        }
    }//GEN-LAST:event_box16TFMouseClicked

    private void box16TFMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box16TFMouseEntered
        if (clickable && !selected[16]) {
            setBoxHighlighted(16);
        }
    }//GEN-LAST:event_box16TFMouseEntered

    private void box16TFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box16TFMouseExited
        if (clickable && !selected[16]) {
            setBoxNormal(16);
        }
    }//GEN-LAST:event_box16TFMouseExited

    private void box16TFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box16TFMousePressed
        if (clickable) {
            setBoxPressed(16);
        }
    }//GEN-LAST:event_box16TFMousePressed

    private void box16TFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box16TFMouseReleased
        if (clickable) {
            setBoxHighlighted(16);
        }
    }//GEN-LAST:event_box16TFMouseReleased

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        int i;
        int box;

        exit = false;

        startBtn.setVisible(false);

        startMsg1L.setVisible(false);
        startMsg2L.setVisible(false);

        for (i = 1; i <= 16; i++) {
            selected[i] = false;
            generated[i] = false;
        }

        numberOfBoxes = (int) (Math.random() * 16) + 1;

        i = numberOfBoxes;
        while (i > 0) {
            box = (int) (Math.random() * 16) + 1;
            if (!generated[box]) {
                generated[box] = true;
                i--;
            }
        }

        showBoxes(msTimeBegin, msTimeBegin + msTimeInterval);
    }//GEN-LAST:event_startBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        int i;
        int temp;
        boolean flag = false;

        for (i = 1; i <= 16; i++) {
            if (generated[i] != selected[i]) {
                flag = true;
                break;
            }
        }

        if (flag) {
            clickable = false;

            for (i = 1; i <= 16; i++) {
                setBoxNormal(i);
            }
            for (i = 1; i <= 16; i++) {
                if (generated[i]) {
                    setBoxHighlighted(i);
                }
            }

            submitBtn.setVisible(false);
            submitMsg1L.setVisible(false);
            submitMsg2L.setVisible(false);

            playAudio(7);
            JOptionPane.showMessageDialog(this, "Wrong !!");

            for (i = 1; i <= 16; i++) {
                setBoxNormal(i);
            }

            exit = true;

            gameOver();
        } else {
            clickable = false;

            submitBtn.setVisible(false);
            submitMsg1L.setVisible(false);
            submitMsg2L.setVisible(false);

            correctMsgL.setVisible(true);

            playAudio(5);

            temp = ((8 - Math.abs(numberOfBoxes - 8)));
            if (temp == 0) {
                temp++;
            }
            if ((numberOfBoxes >= 5) && (numberOfBoxes <= 12)) {
                temp += Math.round((float) (temp * 0.5));
            }
            gameScore += Math.round(temp * ((((float) (msTimeMaximum - msTimeInterval) / (float) (msTimeMaximum - msTimeMinimum)) * (maxMultiple - 1)) + 1));
            gameScore2L.setText(Integer.toString(gameScore));

            if (gameScore > highScore) {
                if (!newHighScore && highScore != 0) {
                    newHighScore = true;
                    playAudio(6);
                    JOptionPane.showMessageDialog(this, "New High Score achieved !!");
                }
                highScore = gameScore;
                highScore2L.setText(Integer.toString(highScore));

                try {
                    Class.forName("java.sql.DriverManager");
                    Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/gamezonedata", "root", "12345");
                    Statement stmt = (Statement) con.createStatement();
                    String query = "UPDATE highscores SET GetTheSquares = '" + highScore + "' WHERE Username = '" + username + "';";
                    stmt.executeUpdate(query);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }

            msTimeInterval -= msTimeStep;
            if (msTimeInterval < msTimeMinimum) {
                msTimeInterval = msTimeMinimum;
            }

            nextLevel(msTimeEnd);
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        if (!exit) {
            playAudio(0);
            int reply = JOptionPane.showConfirmDialog(this, "Game In Progress !!\nAre you sure you want to exit", "Caution !!", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                exit = true;
            }
        }

        if (exit) {
            homePage frame0 = new homePage();
            getTheSquares.this.setVisible(false);
            frame0.setVisible(true);
            frame0.dataPass0(username);
        }
    }//GEN-LAST:event_returnBtnActionPerformed

    private void proceedToGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedToGameActionPerformed
        instructionsPanel.setVisible(false);

        gamePanel.setVisible(true);

        playAudio(1);
    }//GEN-LAST:event_proceedToGameActionPerformed

    private void playAgainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainBtnActionPerformed
        gameOverPanel.setVisible(false);

        exit = true;

        clickable = false;

        msTimeInterval = msTimeMaximum;

        gameScore = 0;
        gameScore2L.setText(Integer.toString(gameScore));

        highScore2L.setText(Integer.toString(highScore));

        if (highScore == 0) {
            newHighScore = true;
        } else {
            newHighScore = false;
        }

        startBtn.setText("Start Game");
        startBtn.setVisible(true);

        startMsg1L.setVisible(true);
        startMsg2L.setVisible(true);

        submitBtn.setVisible(false);
        submitMsg1L.setVisible(false);
        submitMsg2L.setVisible(false);
        correctMsgL.setVisible(false);

        for (int i = 1; i <= 16; i++) {
            setBoxNormal(i);
        }

        gamePanel.setVisible(true);

        playAudio(1);
    }//GEN-LAST:event_playAgainBtnActionPerformed

    public void showBoxes(int msDelay, int msFlash) {
        timerDelay = new Timer();
        timerFlash = new Timer();
        timerDelay.schedule(new taskDelay(), msDelay);
        timerFlash.schedule(new taskFlash(), msFlash);
    }

    class taskDelay extends TimerTask {
        public void run() {
            playAudio(3);
            for (int i = 1; i <= 16; i++) {
                if (generated[i]) {
                    setBoxHighlighted(i);
                }
            }
        }
    }

    class taskFlash extends TimerTask {
        public void run() {
            for (int i = 1; i <= 16; i++) {
                setBoxNormal(i);
            }
            clickable = true;
            submitBtn.setVisible(true);
            submitMsg1L.setVisible(true);
            submitMsg2L.setVisible(true);
        }
    }

    public void nextLevel(int msTime) {
        timerCorrect = new Timer();
        timerCorrect.schedule(new taskCorrect(), msTime);
    }

    class taskCorrect extends TimerTask {
        public void run() {
            int i;
            for (i = 1; i <= 16; i++) {
                setBoxNormal(i);
            }

            correctMsgL.setVisible(false);

            startBtn.setText("Start");
            startBtn.setVisible(true);

            startMsg1L.setVisible(true);
            startMsg2L.setVisible(true);
        }
    }

    public void gameOver() {
        gameScoreL.setText("\nGame Score: " + gameScore);
        highScoreL.setText("\nHigh Score: " + highScore);

        gamePanel.setVisible(false);
        gameOverPanel.setVisible(true);
    }

    public void setBoxNormal(int box) {
        if (box == 1) {
            box01TF.setBackground(Color.decode(colourNormal));
        } else if (box == 2) {
            box02TF.setBackground(Color.decode(colourNormal));
        } else if (box == 3) {
            box03TF.setBackground(Color.decode(colourNormal));
        } else if (box == 4) {
            box04TF.setBackground(Color.decode(colourNormal));
        } else if (box == 5) {
            box05TF.setBackground(Color.decode(colourNormal));
        } else if (box == 6) {
            box06TF.setBackground(Color.decode(colourNormal));
        } else if (box == 7) {
            box07TF.setBackground(Color.decode(colourNormal));
        } else if (box == 8) {
            box08TF.setBackground(Color.decode(colourNormal));
        } else if (box == 9) {
            box09TF.setBackground(Color.decode(colourNormal));
        } else if (box == 10) {
            box10TF.setBackground(Color.decode(colourNormal));
        } else if (box == 11) {
            box11TF.setBackground(Color.decode(colourNormal));
        } else if (box == 12) {
            box12TF.setBackground(Color.decode(colourNormal));
        } else if (box == 13) {
            box13TF.setBackground(Color.decode(colourNormal));
        } else if (box == 14) {
            box14TF.setBackground(Color.decode(colourNormal));
        } else if (box == 15) {
            box15TF.setBackground(Color.decode(colourNormal));
        } else if (box == 16) {
            box16TF.setBackground(Color.decode(colourNormal));
        }
    }

    public void setBoxHighlighted(int box) {
        if (box == 1) {
            box01TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 2) {
            box02TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 3) {
            box03TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 4) {
            box04TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 5) {
            box05TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 6) {
            box06TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 7) {
            box07TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 8) {
            box08TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 9) {
            box09TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 10) {
            box10TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 11) {
            box11TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 12) {
            box12TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 13) {
            box13TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 14) {
            box14TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 15) {
            box15TF.setBackground(Color.decode(colourHighlighted));
        } else if (box == 16) {
            box16TF.setBackground(Color.decode(colourHighlighted));
        }
    }

    public void setBoxPressed(int box) {
        if (box == 1) {
            box01TF.setBackground(Color.decode(colourPressed));
        } else if (box == 2) {
            box02TF.setBackground(Color.decode(colourPressed));
        } else if (box == 3) {
            box03TF.setBackground(Color.decode(colourPressed));
        } else if (box == 4) {
            box04TF.setBackground(Color.decode(colourPressed));
        } else if (box == 5) {
            box05TF.setBackground(Color.decode(colourPressed));
        } else if (box == 6) {
            box06TF.setBackground(Color.decode(colourPressed));
        } else if (box == 7) {
            box07TF.setBackground(Color.decode(colourPressed));
        } else if (box == 8) {
            box08TF.setBackground(Color.decode(colourPressed));
        } else if (box == 9) {
            box09TF.setBackground(Color.decode(colourPressed));
        } else if (box == 10) {
            box10TF.setBackground(Color.decode(colourPressed));
        } else if (box == 11) {
            box11TF.setBackground(Color.decode(colourPressed));
        } else if (box == 12) {
            box12TF.setBackground(Color.decode(colourPressed));
        } else if (box == 13) {
            box13TF.setBackground(Color.decode(colourPressed));
        } else if (box == 14) {
            box14TF.setBackground(Color.decode(colourPressed));
        } else if (box == 15) {
            box15TF.setBackground(Color.decode(colourPressed));
        } else if (box == 16) {
            box16TF.setBackground(Color.decode(colourPressed));
        }
    }

    public void dataPass2(String uName, int sc) {
        username = uName;
        highScore = sc;
        nameL.setText(username);
        highScore2L.setText("" + highScore);
    }

    public void playAudio(int track) {
        switch (track) {
            case 0:
                Toolkit.getDefaultToolkit().beep();
                break;
            case 1:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\proceedToGame.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 2:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\singleBeep.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 3:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\glassPing.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 4:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\singleCoinDrop.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 5:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\multipleCoinDrop.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 6:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\tadaHighScore.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
            case 7:
                try {
                    InputStream music = new FileInputStream(new File("src\\Audio\\buzzerGameOver.wav"));
                    AudioStream audio = new AudioStream(music);
                    AudioPlayer.player.start(audio);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new getTheSquares().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField box01TF;
    private javax.swing.JTextField box02TF;
    private javax.swing.JTextField box03TF;
    private javax.swing.JTextField box04TF;
    private javax.swing.JTextField box05TF;
    private javax.swing.JTextField box06TF;
    private javax.swing.JTextField box07TF;
    private javax.swing.JTextField box08TF;
    private javax.swing.JTextField box09TF;
    private javax.swing.JTextField box10TF;
    private javax.swing.JTextField box11TF;
    private javax.swing.JTextField box12TF;
    private javax.swing.JTextField box13TF;
    private javax.swing.JTextField box14TF;
    private javax.swing.JTextField box15TF;
    private javax.swing.JTextField box16TF;
    private javax.swing.JLabel correctMsgL;
    private javax.swing.JPanel coverPanel;
    private javax.swing.JLabel gameOverL;
    private javax.swing.JPanel gameOverPanel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel gameScore1L;
    private javax.swing.JLabel gameScore2L;
    private javax.swing.JLabel gameScoreL;
    private javax.swing.JLabel getTheSquaresL;
    private javax.swing.JLabel getTheSquaresPic1L;
    private javax.swing.JLabel getTheSquaresPic2L;
    private javax.swing.JLabel getTheSquaresPic3L;
    private javax.swing.JLabel highScore1L;
    private javax.swing.JLabel highScore2L;
    private javax.swing.JLabel highScoreL;
    private javax.swing.JPanel homeScreenPanel;
    private javax.swing.JTextField instructions1TF;
    private javax.swing.JTextArea instructions2TA;
    private javax.swing.JPanel instructionsPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nameL;
    private javax.swing.JButton playAgainBtn;
    private javax.swing.JButton proceedToGame;
    private javax.swing.JLabel rememberTheSequencePic4L;
    private javax.swing.JButton returnBtn;
    private javax.swing.JButton startBtn;
    private javax.swing.JLabel startMsg1L;
    private javax.swing.JLabel startMsg2L;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel submitMsg1L;
    private javax.swing.JLabel submitMsg2L;
    private javax.swing.JLabel welcomeL;
    // End of variables declaration//GEN-END:variables
}
